/**
 * Generated by JitBlox - rapid interactive prototyping of modern web apps from your browser.
 * Upgrade to a Pro plan to remove this header, see https://www.jitblox.com/plans for more.
 *
 * Check out this JitBlox project, Soluce, at https://www.jitblox.com/project/5JHnGKTPaU/soluce
 */

import { ApplicationConfig, importProvidersFrom, LOCALE_ID } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { provideRouter } from '@angular/router';
import { NgbAlertModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { routes } from './app.routes';
import {
  HttpClient,
  provideHttpClient,
} from '@angular/common/http';
import { ProblemService } from './services/problem.service';
import { DBProblemService } from './services/backend.problem.service';
import { LocaleService } from './services/locale.service';
import { LocaleGuard } from './guards/locale.guard';

export const appConfig: ApplicationConfig = {
  providers: [
    { provide: ProblemService, useClass: DBProblemService },
    LocaleService,
    LocaleGuard,
    provideHttpClient(),
    importProvidersFrom(
      NgbAlertModule,
      NgbDropdownModule,
      BrowserModule
    ),
    provideRouter(routes),
    // Provide LOCALE_ID dynamically based on current locale
    {
      provide: LOCALE_ID,
      useFactory: (localeService: LocaleService) => {
        return localeService.currentLanguage();
      },
      deps: [LocaleService]
    }
  ],
};
